#include <Wire.h>
#include <LCD.h>
#include <LiquidCrystal.h>

int __ardublockAnalogRead(int pinNumber)
{
  pinMode(pinNumber, INPUT);
  return analogRead(pinNumber);
}


int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin)
{
  long duration;
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  duration = duration / 59;
  if ((duration < 2) || (duration > 300)) return false;
  return duration;
}

String _ABVAR_1_Emoji = "" ;
String _ABVAR_2_Selection = "" ;
// For these LCD controls to work you MUST replace the standard LCD library with 'New LCD' from...
// https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/Home
// Direct download https://bitbucket.org/fmalpartida/new-liquidcrystal/downloads/LiquidCrystal_V1.2.1.zip
// Your project will not compile until this is done.
//
//                             RS  EN  d0  d1  d2  d3  LED 
LiquidCrystal lcd_I2C_Parallel(12, 11,  5,  4,  3,  2,  7, POSITIVE);
int _ABVAR_3_qNumber = 0 ;
int _ABVAR_4_EmojiNumber = 0 ;

void QuesRandomizer();
void gettingClose();
void QArray();
void EmojiArray();

void setup()
{
  Serial.begin(9600);
  digitalWrite( 9 , LOW );

  lcd_I2C_Parallel.begin (16, 2);
  lcd_I2C_Parallel.setBacklight(HIGH);
  Serial.print("Pot1 Read:");
  Serial.print(" ");
  Serial.print(__ardublockAnalogRead(A0));
  Serial.print(" ");
  Serial.println();

}

void loop()
{
  QuesRandomizer();
  Serial.print("UltraSonic Distance:");
  Serial.print(" ");
  Serial.print(	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 9 , 8 ));
  Serial.print(" ");
  Serial.println();
  gettingClose();
}

void gettingClose()
{
  if (( ( ( 0 ) != ( 	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 9 , 8 ) ) ) && ( ( 25 ) > ( 	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 9 , 8 ) ) ) ))
  {
    Serial.print("Emoji:");
    Serial.print(" ");
    Serial.print(_ABVAR_1_Emoji);
    Serial.print(" ");
    Serial.println();
    Serial.print("Question:");
    Serial.print(" ");
    Serial.print(_ABVAR_2_Selection);
    Serial.print(" ");
    Serial.println();
    lcd_I2C_Parallel.clear();
    lcd_I2C_Parallel.setCursor( (8) - 1, (1) - 1 );
    lcd_I2C_Parallel.print( _ABVAR_1_Emoji );
    lcd_I2C_Parallel.setCursor( (1) - 1, (2) - 1 );
    lcd_I2C_Parallel.print( _ABVAR_2_Selection );
    delay( 2500 );
  }
  else
  {
    lcd_I2C_Parallel.clear();
  }
}

void EmojiArray()
{
  _ABVAR_1_Emoji = ":)" ;
  if (( ( _ABVAR_3_qNumber ) == ( 1 ) ))
  {
    _ABVAR_1_Emoji = "O.o" ;
  }
  else
  {
    if (( ( _ABVAR_3_qNumber ) == ( 2 ) ))
    {
      _ABVAR_1_Emoji = "O:-)" ;
    }
    else
    {
      if (( ( _ABVAR_3_qNumber ) == ( 3 ) ))
      {
        _ABVAR_1_Emoji = ":P" ;
      }
      else
      {
        if (( ( _ABVAR_3_qNumber ) == ( 4 ) ))
        {
          _ABVAR_1_Emoji = ">:-|" ;
        }
        else
        {
          if (( ( _ABVAR_3_qNumber ) == ( 5 ) ))
          {
            _ABVAR_1_Emoji = ":O" ;
          }
          else
          {
          }
        }
      }
    }
  }
}

void QArray()
{
  if (( ( _ABVAR_3_qNumber ) == ( 1 ) ))
  {
    _ABVAR_2_Selection = "Have a great day" ;
  }
  else
  {
    if (( ( _ABVAR_3_qNumber ) == ( 2 ) ))
    {
      _ABVAR_2_Selection = "Think good things" ;
    }
    else
    {
      if (( ( _ABVAR_3_qNumber ) == ( 3 ) ))
      {
        _ABVAR_2_Selection = "Maybe go outside?" ;
      }
      else
      {
        if (( ( _ABVAR_3_qNumber ) == ( 4 ) ))
        {
          _ABVAR_2_Selection = "Eat a fruit" ;
        }
        else
        {
          if (( ( _ABVAR_3_qNumber ) == ( 5 ) ))
          {
            _ABVAR_2_Selection = "What r u thinking" ;
          }
          else
          {
            if (( ( _ABVAR_3_qNumber ) == ( 6 ) ))
            {
              _ABVAR_2_Selection = "Play a song" ;
            }
            else
            {
              if (( ( _ABVAR_3_qNumber ) == ( 7 ) ))
              {
                _ABVAR_2_Selection = "Call your mom." ;
              }
              else
              {
                if (( ( _ABVAR_3_qNumber ) == ( 8 ) ))
                {
                  _ABVAR_2_Selection = "Drink some water." ;
                }
                else
                {
                  if (( ( _ABVAR_3_qNumber ) == ( 9 ) ))
                  {
                    _ABVAR_2_Selection = "Call your friend." ;
                  }
                  else
                  {
                    if (( ( _ABVAR_3_qNumber ) == ( 10 ) ))
                    {
                      _ABVAR_2_Selection = "Hi" ;
                    }
                    else
                    {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void QuesRandomizer()
{
  _ABVAR_3_qNumber = 	random( 0 , 10 ) ;
  _ABVAR_4_EmojiNumber = 	random( 0 , 10 ) ;
  QArray();
  EmojiArray();
}
